reverted:
--- a/ext/standard/tests/file/bug68532.phpt
+++ /dev/null
@@ -1,25 +0,0 @@
---TEST--
-Bug #68532: convert.base64-encode omits padding bytes
---FILE--
-<?php
-$testString = 'test';
-$stream = fopen('php://memory','r+');
-fwrite($stream, $testString);
-rewind($stream);
-$filter = stream_filter_append($stream, 'convert.base64-encode');
-echo "memoryStream = " . stream_get_contents($stream).PHP_EOL;
-
-
-$fileStream = fopen(__DIR__ . '/base64test.txt','w+');
-fwrite($fileStream , $testString);
-rewind($fileStream );
-$filter = stream_filter_append($fileStream , 'convert.base64-encode');
-echo "fileStream = " . stream_get_contents($fileStream ).PHP_EOL;
-?>
---CLEAN--
-<?php
-unlink(__DIR__ . '/base64test.txt');
-?>
---EXPECT--
-memoryStream = dGVzdA==
-fileStream = dGVzdA==
--- a/ext/standard/tests/file/stream_rfc2397_007.phpt
+++ b/ext/standard/tests/file/stream_rfc2397_007.phpt
@@ -95,7 +95,6 @@
 bool(false)
 ===GETC===
 string(1) "5"
-bool(false)
 int(6)
 bool(true)
 ===REWIND===
--- a/main/streams/memory.c
+++ b/main/streams/memory.c
@@ -87,19 +87,15 @@
 	php_stream_memory_data *ms = (php_stream_memory_data*)stream->abstract;
 	assert(ms != NULL);
 
-	if (ms->fpos == ms->fsize) {
+	if (ms->fpos + count >= ms->fsize) {
+		count = ms->fsize - ms->fpos;
 		stream->eof = 1;
-		count = 0;
-	} else {
-		if (ms->fpos + count >= ms->fsize) {
-			count = ms->fsize - ms->fpos;
-		}
-		if (count) {
-			assert(ms->data!= NULL);
-			assert(buf!= NULL);
-			memcpy(buf, ms->data+ms->fpos, count);
-			ms->fpos += count;
-		}
+	}
+	if (count) {
+		assert(ms->data!= NULL);
+		assert(buf!= NULL);
+		memcpy(buf, ms->data+ms->fpos, count);
+		ms->fpos += count;
 	}
 	return count;
 }
