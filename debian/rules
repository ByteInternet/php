#!/usr/bin/make -f
# Sample debian/rules that uses debhelper. 
# GNU copyright 1997 by Joey Hess.
#
# This version is for a hypothetical package that builds an
# architecture-dependant package, as well as an architecture-independent
# package.

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

# Set this flag to 'yes' if you want to disable all modifications breaking abi 
# compatibility to upstream
PHP5_COMPAT=no

# enable dpkg build flags
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/buildflags.mk
include /usr/share/dpkg/architecture.mk
include /usr/share/dpkg/pkg-info.mk
export DEB_HOST_MULTIARCH
PHP_SOURCE_VERSION   := $(DEB_VERSION)
PHP_UPSTREAM_VERSION := $(DEB_VERSION_UPSTREAM)
PHP_DEBIAN_REVISION  := $(shell echo $(PHP_SOURCE_VERSION) | sed "s/.*-//")
PHP_DFSG_VERSION     := $(shell echo $(PHP_UPSTREAM_VERSION) | sed 's/+.*//')
PHP_MAJOR_VERSION    := $(shell echo $(PHP_DFSG_VERSION) | awk -F. '{print $$1}')
PHP_MINOR_VERSION    := $(shell echo $(PHP_DFSG_VERSION) | awk -F. '{print $$2}')
PHP_RELEASE_VERSION  := $(shell echo $(PHP_DFSG_VERSION) | awk -F. '{print $$3}')
PHP_NAME_VERSION     := $(PHP_MAJOR_VERSION).$(PHP_MINOR_VERSION)

TARGETS              := apache2 apache2filter cli embed fpm cgi
CONFIGURE_TARGETS    := $(addprefix configure-, $(addsuffix -stamp, $(TARGETS)))
BUILD_TARGETS        := $(addprefix build-, $(addsuffix -stamp, $(TARGETS)))

RUN_TESTS = yes
ifeq (nocheck,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
  $(warning Disabling checks due DEB_BUILD_OPTIONS)
  RUN_TESTS = no
endif
ifeq ($(DEB_HOST_ARCH),$(filter $(DEB_HOST_ARCH),hurd-i386 mips mipsel))
  $(warning Disabling checks on $(DEB_HOST_ARCH))
  RUN_TESTS = no
endif

ifneq ($(DEB_HOST_ARCH),$(filter $(DEB_HOST_ARCH),hurd-i386 m68k hppa ppc64))
  CONFIGURE_APACHE_ARGS = --with-interbase=shared,/usr --with-pdo-firebird=shared,/usr
else
  CONFIGURE_APACHE_ARGS = --without-interbase --without-pdo-firebird
endif

ifeq (yes,$(RUN_TESTS))
  MYSQL_PORT := $(shell for i in $$(seq 1025 3600 | sort -R); do nc -z localhost $$i || { echo $$i; exit; } ; done)
  MYSQL_DATA_DIR ?= $(shell readlink -f mysql_db)
  ifeq (,$(MYSQL_PORT))
      $(error Could not find available port for mysql server)
  endif
  MYSQL_SOCKET = $(MYSQL_DATA_DIR)/mysql.sock
endif

ifeq (linux,$(DEB_HOST_ARCH_OS))
  CONFIGURE_SYSTEMD = --with-fpm-systemd
else
  CONFIGURE_SYSTEMD = --without-fpm-systemd
endif

ifeq ($(DEB_HOST_ARCH),$(filter $(DEB_HOST_ARCH),amd64 armel armhf i386 ia64 powerpc))
  CONFIGURE_DTRACE_ARGS = --enable-dtrace
else
  CONFIGURE_DTRACE_ARGS = --disable-dtrace
endif

# specify some options to our patch system
QUILT_DIFF_OPTS=-p
QUILT_NO_DIFF_TIMESTAMPS=1 
export QUILT_DIFF_OPTS QUILT_NO_DIFF_TIMESTAMPS

PROG_SENDMAIL = /usr/sbin/sendmail
ifeq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
  CFLAGS += -O2
else
  CFLAGS += -O0
endif
CFLAGS += -Wall -fsigned-char -fno-strict-aliasing 
# LFS support
ifneq (yes,$(PHP5_COMPAT))
  CFLAGS += $(shell getconf LFS_CFLAGS)
endif

# Enable IEEE-conformant floating point math on alphas (not the default)
ifeq (alpha-linux-gnu,$(DEB_HOST_GNU_TYPE))
  CFLAGS += -mieee
endif

# Enable producing of debugging information
CFLAGS += -g

# some other helpful (for readability at least) shorthand variables
PHPIZE_BUILDDIR = debian/php$(PHP_NAME_VERSION)-dev/usr/lib/php/$(PHP_NAME_VERSION)/build

# support new (>= 2.2) and older versions of libtool for backporting ease
LIBTOOL_DIRS = /usr/share/libtool/config /usr/share/libtool
LTMAIN = $(firstword $(wildcard $(foreach d,$(LIBTOOL_DIRS),$d/ltmain.sh)))
LTMAIN_DIR = $(dir $(LTMAIN))

ifeq ($(LTMAIN_DIR), /usr/share/libtool/)
LIBTOOL_CONFLICTS:=libtool (>= 2.2)
else ifeq ($(LTMAIN_DIR), /usr/share/libtool/config/)
LIBTOOL_CONFLICTS:=libtool (<< 2.2)
else
LIBTOOL_CONFLICTS:=$(error "could not resolve path to ltmain.sh")
endif

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(NUMJOBS)
endif

COMMON_CONFIG=--host=$(DEB_HOST_GNU_TYPE) \
		--libdir=\$${prefix}/lib/php/$(PHP_NAME_VERSION) \
		--libexecdir=\$${prefix}/lib/php/$(PHP_NAME_VERSION) \
		--program-suffix=$(PHP_NAME_VERSION) \
		--disable-debug \
		--with-regex=php \
		--disable-rpath \
		--disable-static \
		--with-pic \
		--with-layout=GNU \
		--with-pear=/usr/share/php \
		--enable-calendar \
		--enable-sysvsem \
		--enable-sysvshm \
		--enable-sysvmsg \
		--enable-bcmath \
		--with-bz2 \
		--enable-ctype \
		--with-db4 \
		--with-qdbm=/usr \
		--without-gdbm \
		--with-iconv \
		--enable-exif \
		--enable-ftp \
		--with-gettext \
		--enable-mbstring \
		--with-onig=/usr \
		--with-pcre-regex=/usr \
		--enable-shmop \
		--enable-sockets \
		--enable-wddx \
		--with-libxml-dir=/usr \
		--with-zlib \
		--with-kerberos=/usr \
		--with-openssl=/usr \
		--enable-soap \
		--enable-zip \
		--with-mhash=yes \
		--with-system-tzdata \
		--with-mysql-sock=/var/run/mysqld/mysqld.sock \
		$(CONFIGURE_DTRACE_ARGS)
apache2_config=--with-apxs2=/usr/bin/apxs2 \
		--with-config-file-path=/etc/php/$(PHP_NAME_VERSION)/apache2 \
		--with-config-file-scan-dir=/etc/php/$(PHP_NAME_VERSION)/apache2/conf.d \
		$(COMMON_CONFIG) \
		--without-mm \
		--with-curl=shared,/usr \
		--with-enchant=shared,/usr \
		--with-zlib-dir=/usr \
		--with-gd=shared,/usr --enable-gd-native-ttf \
		--with-gmp=shared,/usr \
		--with-jpeg-dir=shared,/usr \
		--with-xpm-dir=shared,/usr/X11R6 \
		--with-png-dir=shared,/usr \
		--with-freetype-dir=shared,/usr \
	    --with-vpx-dir=shared,/usr \
		--with-imap=shared,/usr \
		--with-imap-ssl \
		--enable-intl=shared \
		--without-t1lib \
		--with-ldap=shared,/usr \
		--with-ldap-sasl=/usr \
		--with-mcrypt=shared,/usr \
		--with-mysql=shared,/usr \
		--with-mysqli=shared,/usr/bin/mysql_config \
		--with-pspell=shared,/usr \
		--with-unixODBC=shared,/usr \
		--with-recode=shared,/usr \
		--with-xsl=shared,/usr \
		--with-snmp=shared,/usr \
		--with-sqlite3=shared,/usr \
		--with-mssql=shared,/usr \
		--with-tidy=shared,/usr \
		--with-xmlrpc=shared \
		--with-pgsql=shared,/usr PGSQL_INCLUDE=`pg_config --includedir` \
		--enable-pdo=shared \
		--without-pdo-dblib \
		--with-pdo-mysql=shared,/usr \
		--with-pdo-odbc=shared,unixODBC,/usr \
		--with-pdo-pgsql=shared,/usr/bin/pg_config \
		--with-pdo-sqlite=shared,/usr \
		--with-pdo-dblib=shared,/usr \
		$(CONFIGURE_APACHE_ARGS)
apache2filter_config=--with-apxs2filter=/usr/bin/apxs2 \
		--with-config-file-path=/etc/php/$(PHP_NAME_VERSION)/apache2filter \
		--with-config-file-scan-dir=/etc/php/$(PHP_NAME_VERSION)/apache2filter/conf.d \
		$(COMMON_CONFIG) \
		--without-mm \
		--disable-pdo \
		--without-mysql --without-sybase-ct --without-mssql \
		--without-sqlite3
cgi_config=--enable-force-cgi-redirect --enable-fastcgi \
		--with-config-file-path=/etc/php/$(PHP_NAME_VERSION)/cgi \
		--with-config-file-scan-dir=/etc/php/$(PHP_NAME_VERSION)/cgi/conf.d \
		$(COMMON_CONFIG) \
		--without-mm \
		--enable-pdo=shared \
		--enable-mysqlnd=shared \
		--with-mysql=shared,mysqlnd \
		--with-mysqli=shared,mysqlnd \
		--with-pdo-mysql=shared,mysqlnd \
		--without-pdo-sqlite \
		--without-sybase-ct --without-mssql \
		--without-sqlite3 \
		--enable-pcntl
cli_config=--disable-cgi \
		--with-config-file-path=/etc/php/$(PHP_NAME_VERSION)/cli \
		--with-config-file-scan-dir=/etc/php/$(PHP_NAME_VERSION)/cli/conf.d \
		$(COMMON_CONFIG) \
		--without-mm \
		--disable-pdo \
		--without-mysql --without-sybase-ct \
		--without-mssql --without-sqlite3 --enable-pcntl \
		--with-libedit=shared,/usr
embed_config=--enable-embed --disable-cgi \
		--with-config-file-path=/etc/php/$(PHP_NAME_VERSION)/embed \
		--with-config-file-scan-dir=/etc/php/$(PHP_NAME_VERSION)/embed/conf.d \
		$(COMMON_CONFIG) \
		--without-mm \
		--disable-pdo \
		--without-mysql --without-sybase-ct \
		--without-mssql --without-sqlite3 --enable-pcntl
fpm_config=--enable-fpm --disable-cgi \
		--with-fpm-user=www-data --with-fpm-group=www-data \
		--with-config-file-path=/etc/php/$(PHP_NAME_VERSION)/fpm \
		--with-config-file-scan-dir=/etc/php/$(PHP_NAME_VERSION)/fpm/conf.d \
		$(COMMON_CONFIG) \
		--with-libevent-dir=/usr \
		--without-mm \
		--disable-pdo \
		--without-mysql --without-sybase-ct \
		--without-mssql --without-sqlite3 \
		$(CONFIGURE_SYSTEMD)

export apache2_config apache2_filter_config cli_config embed_config fpm_config cgi_config

BUILTIN_EXTENSION_CHECK=$$e=get_loaded_extensions(); natcasesort($$e); \
			$$s="The following extensions are built in:"; \
			foreach($$e as $$i) { $$s .= " $$i"; } \
			echo("php:Extensions=" . wordwrap($$s . ".\n", 75, "\$${Newline}"));

%:
	dh $@

prepared: prepared-stamp
prepared-stamp:
	dh_testdir
	sed -i -e 's/EXTRA_VERSION=""/EXTRA_VERSION="-$(PHP_DEBIAN_REVISION)"/' configure.in
	./buildconf --force
	touch prepared-stamp

unprepared:
	dh_testdir
	sed -i -e 's/EXTRA_VERSION="-$(PHP_DEBIAN_REVISION)"/EXTRA_VERSION=""/' configure.in
	rm -f prepared-stamp

override_dh_auto_test: test-results.txt

test-results.txt: build-apache2-stamp build-cli-stamp build-cgi-stamp
ifeq (yes,$(RUN_TESTS))
	mkdir -p temp_session_store
	# start our own mysql server for the tests
	$(SHELL) -x debian/setup-mysql.sh $(MYSQL_PORT) $(MYSQL_DATA_DIR)
	extensions=""; \
	for f in $(CURDIR)/apache2-build/modules/*.so; do \
	    ext=`basename "$$f"`; \
	    test -d "$(CURDIR)/ext/$${ext%.so}/tests" || continue; \
	    test "$$ext" != "imap.so" || continue; \
	    test "$$ext" != "interbase.so" || continue; \
	    test "$$ext" != "ldap.so" || continue; \
	    test "$$ext" != "odbc.so" || continue; \
	    test "$$ext" != "pgsql.so" || continue; \
	    test "$$ext" != "pdo_dblib.so" || continue; \
	    test "$$ext" != "pdo_firebird.so" || continue; \
	    test "$$ext" != "pdo_odbc.so" || continue; \
	    test "$$ext" != "pdo_pgsql.so" || continue; \
	    test "$$ext" != "snmp.so" || continue; \
	    test "$$ext" != "opcache.so" || continue; \
	    extensions="$$extensions -d extension=$$ext"; \
	done; \
	[ "$$extensions" ] || { echo "extensions list is empty"; exit 1; }; \
	env MYSQL_TEST_HOST=127.0.0.1 MYSQL_TEST_PORT=$(MYSQL_PORT) MYSQL_TEST_SOCKET=$(MYSQL_SOCKET) PDO_MYSQL_TEST_HOST=127.0.0.1 PDO_MYSQL_TEST_PORT=$(MYSQL_PORT) PDO_MYSQL_TEST_SOCKET=$(MYSQL_SOCKET) NO_INTERACTION=1 TEST_PHP_CGI_EXECUTABLE=$(CURDIR)/cgi-build/sapi/cgi/cgi-bin.php$(PHP_NAME_VERSION) TEST_PHP_EXECUTABLE=$(CURDIR)/cli-build/sapi/cli/php \
	$(CURDIR)/cli-build/sapi/cli/php run-tests.php -n -d mysql.default_host=127.0.0.1 -d mysql.default_socket=$(MYSQL_SOCKET) -d mysqli.default_socket=$(MYSQL_SOCKET) -d extension_dir=$(CURDIR)/apache2-build/modules/ $$extensions| tee test-results.txt
	rm -rf temp_session_store
	@for test in `find . -name '*.log' -a '!' -name 'config.log' -a '!' -name 'bootstrap.log' -a '!' -name 'run.log'`; do \
	    echo; \
	    echo -n "$${test#./}:"; \
	    cat $$test; \
	    echo; \
	done | tee -a test-results.txt
	$(SHELL) -x debian/setup-mysql.sh $(MYSQL_PORT) $(MYSQL_DATA_DIR) stop
else
	echo 'nocheck found in DEB_BUILD_OPTIONS or unsupported architecture' | tee test-results.txt
endif

override_dh_auto_build: $(BUILD_TARGETS) build-pear-stamp # test-results.txt

build-%-stamp: configure-%-stamp
	dh_auto_build --builddirectory $*-build --parallel

	touch build-$*-stamp

build-cgi-stamp: configure-cgi-stamp
	dh_auto_build --builddirectory cgi-build && mv cgi-build/sapi/cgi/php-cgi cgi-build/sapi/cgi/cgi-bin.php$(PHP_NAME_VERSION)

	# Dirty hack to not rebuild everything twice
	cd cgi-build/main && \
		sed -i -e 's/FORCE_CGI_REDIRECT 1/FORCE_CGI_REDIRECT 0/' \
		       -e 's/DISCARD_PATH 0/DISCARD_PATH 1/' php_config.h && \
		sed -i -e 's/--enable-force-cgi-redirect/--enable-discard-path/' build-defs.h && \
		touch ../../ext/standard/info.c && \
		touch ../../sapi/cgi/cgi_main.c

	dh_auto_build --builddirectory cgi-build  && mv cgi-build/sapi/cgi/php-cgi cgi-build/sapi/cgi/usr.bin.php$(PHP_NAME_VERSION)-cgi

	touch build-cgi-stamp

build-pear-stamp: build-cgi-stamp
	dh_testdir
	-mkdir pear-build
	-mkdir pear-build-download
	cd cgi-build && PHP_PEAR_DOWNLOAD_DIR=$(CURDIR)/pear-build-download $(MAKE) install-pear PHP_PEAR_PHP_BIN=/usr/bin/php PHP_PEAR_INSTALL_DIR=/usr/share/php PHP_PEAR_SYSCONF_DIR=/etc/pear PHP_PEAR_SIG_BIN=/usr/bin/gpg INSTALL_ROOT=$(CURDIR)/pear-build
	sed -i -e 's/-d output_buffering=1 -d open_basedir="" -d safe_mode=0/-d output_buffering=1 -d open_basedir="" -d safe_mode=0 -d memory_limit="-1"/' \
	       $(CURDIR)/pear-build/usr/bin/pear && \
	sed -i -e 's/-d output_buffering=1 -d safe_mode=0/-d output_buffering=1 -d open_basedir="" -d safe_mode=0 -d memory_limit="-1"/' \
	       $(CURDIR)/pear-build/usr/bin/pecl && \
	sed -i -e 's/-d memory_limit="-1"//' \
	       -e 's/-d output_buffering=1 -d open_basedir="" -d safe_mode=0/-d output_buffering=1 -d open_basedir="" -d safe_mode=0 -d memory_limit="-1"/' \
	       $(CURDIR)/pear-build/usr/bin/peardev
	sed -i -re "s#('PEAR_CONFIG_SYSCONFDIR', PHP_SYSCONFDIR)#\1 . '/pear'#" $(CURDIR)/pear-build/usr/share/php/PEAR/Config.php
	patch -s -d $(CURDIR)/pear-build/usr/share/php/ -p1 -i $(CURDIR)/debian/PEAR-Builder-print-info-about-php5-dev.patch
	touch build-pear-stamp

override_dh_auto_configure: $(CONFIGURE_TARGETS)

configure-%-stamp: prepared-stamp
	echo ${$*_config}
	CFLAGS="$(CFLAGS)" PROG_SENDMAIL="$(PROG_SENDMAIL)" dh_auto_configure --builddirectory $*-build -- ${$*_config}
	cd $*-build && \
	cp ../Zend/zend_ini_scanner.c ../Zend/zend_language_scanner.c \
	   ../Zend/zend_ini_parser.h ../Zend/zend_language_parser.h \
	   ../Zend/zend_ini_parser.c ../Zend/zend_language_parser.c \
	   Zend/
	touch configure-$*-stamp

override_dh_auto_clean: unprepared
	rm -f configure-apache2-stamp build-apache2-stamp
	rm -f configure-apache2filter-stamp build-apache2filter-stamp
	rm -f configure-cgi-stamp build-cgi-stamp
	rm -f configure-cli-stamp build-cli-stamp
	rm -f configure-embed-stamp build-embed-stamp
	rm -f configure-fpm-stamp build-fpm-stamp
	rm -f build-pear-stamp
	rm -f install-stamp
	rm -rf apache2-build
	rm -rf apache2filter-build
	rm -rf cgi-build
	rm -rf cli-build
	rm -rf embed-build
	rm -rf fpm-build
	rm -rf pear-build pear-build-download
	# just in case the build tests failed, kill the running mysqld
	$(SHELL) debian/setup-mysql.sh $(MYSQL_PORT) $(MYSQL_DATA_DIR) stop > /dev/null 2>&1 || exit 0
	rm -rf test-results.txt $(MYSQL_DATA_DIR)

	# clean up autogenerated cruft
	cat debian/modulelist | while read package extname dsoname priority; do \
		rm -f debian/php$(PHP_NAME_VERSION)-$$package.postinst; \
		rm -f debian/php$(PHP_NAME_VERSION)-$$package.preinst; \
		rm -f debian/php$(PHP_NAME_VERSION)-$$package.prerm; \
		rm -f debian/php$(PHP_NAME_VERSION)-$$package.postrm; \
	done
	for sapi in libapache2-mod-php$(PHP_NAME_VERSION) libapache2-mod-php$(PHP_NAME_VERSION)filter php$(PHP_NAME_VERSION)-cgi php$(PHP_NAME_VERSION)-cli libphp$(PHP_NAME_VERSION)-embed php$(PHP_NAME_VERSION)-fpm; do \
		for cruft in postrm links; do \
			rm -f debian/$${sapi}.$${cruft}; \
		done; \
	done

override_dh_clean:
	dh_clean -Xorig

PCNTL_FUNCTIONS := $(shell < ext/pcntl/php_pcntl.h sed -ne "/^PHP_FUNCTION/ s/PHP_FUNCTION(\(.*\));/\1/;t end;d;:end p" | tr '\n' ',')

override_dh_auto_install: DH_OPTIONS=
override_dh_auto_install: 
	chmod 01733 debian/php$(PHP_NAME_VERSION)-common/var/lib/php$(PHP_NAME_VERSION)/sessions/

	# Mangle apache2filter DSO name before running dh_apache2
	mv apache2filter-build/.libs/libphp5.so apache2filter-build/.libs/libphp$(PHP_NAME_VERSION)filter.so
	mv apache2-build/.libs/libphp5.so apache2-build/.libs/libphp$(PHP_NAME_VERSION).so

	# install apache2 DSO module
	dh_apache2 --conditional=php5_enable

	# sanitize php.ini file
	cat php.ini-production | tr "\t" " " | \
	sed -e'/session.gc_probability =/ s/1/0/g;' \
	    -e'/disable_functions =/ s/$$/ $(PCNTL_FUNCTIONS)/g;' \
	    -e'/expose_php =/ s/On/Off/g;' \
	  > debian/php$(PHP_NAME_VERSION)-common/usr/share/php$(PHP_NAME_VERSION)/php.ini-production
	cat php.ini-production | tr "\t" " " | \
	sed -e'/memory_limit =/ s/128M/-1/g;' \
	    -e'/session.gc_probability =/ s/1/0/g' \
	  > debian/php$(PHP_NAME_VERSION)-common/usr/share/php$(PHP_NAME_VERSION)/php.ini-production.cli
	cat php.ini-development | tr "\t" " " | \
	sed -e'/session.gc_probability =/ s/1/0/g;' \
	    -e'/disable_functions =/ s/$$/ $(PCNTL_FUNCTIONS)/g;' \
	  > debian/php$(PHP_NAME_VERSION)-common/usr/share/php$(PHP_NAME_VERSION)/php.ini-development
ifeq (yes,$(RUN_TESTS))
	cp test-results.txt debian/php$(PHP_NAME_VERSION)-common/usr/share/doc/php$(PHP_NAME_VERSION)-common/
endif

	# Install reportbug for php5 package
	mkdir -p debian/php$(PHP_NAME_VERSION)/usr/share/bug/php$(PHP_NAME_VERSION)
	install -m644 debian/php$(PHP_NAME_VERSION).bug.control debian/php$(PHP_NAME_VERSION)/usr/share/bug/php$(PHP_NAME_VERSION)/control
	#ln -s ../php$(PHP_NAME_VERSION)-common/script debian/php$(PHP_NAME_VERSION)/usr/share/bug/php$(PHP_NAME_VERSION)/script

	# Install helper shell fragment
	install -m644 debian/php$(PHP_NAME_VERSION)-helper $(CURDIR)/debian/php$(PHP_NAME_VERSION)-common/usr/share/php$(PHP_NAME_VERSION)/
	install -m644 debian/debhelper/php5-maintscript-helper $(CURDIR)/debian/php$(PHP_NAME_VERSION)-common/usr/share/php$(PHP_NAME_VERSION)/

	# install embed SAPI
	cd embed-build && make install-headers install-build install-sapi install-programs INSTALL_ROOT=$(CURDIR)/debian/libphp$(PHP_NAME_VERSION)-embed

	# install the apache modules' files
	cd apache2-build && $(MAKE) install-headers install-build install-modules install-programs INSTALL_ROOT=$(CURDIR)/debian/libapache2-mod-php$(PHP_NAME_VERSION)

	# install the headers from cgi-build
	cd cgi-build && $(MAKE) install-headers INSTALL_ROOT=$(CURDIR)/debian/php$(PHP_NAME_VERSION)-dev

	# remove netware and win32 headers that we don't want
	cd debian/libapache2-mod-php$(PHP_NAME_VERSION)/usr/include/php$(PHP_NAME_VERSION)/ && \
		  $(RM) TSRM/readdir.h \
			TSRM/tsrm_config.nw.h TSRM/tsrm_config.w32.h\
			TSRM/tsrm_nw.h TSRM/tsrm_win32.h\
			Zend/zend_config.nw.h Zend/zend_config.w32.h\
			main/config.nw.h main/config.w32.h\
			main/win95nt.h

	# install PEAR
	cp -a pear-build/* debian/php-pear/

	# everything under usr/share/php/data except 'PEAR' is b0rken
	# and actually needs to be fixed
	[ ! -f debian/php-pear/usr/share/php/data/Structures_Graph/LICENSE ] || \
		$(RM) debian/php-pear/usr/share/php/data/Structures_Graph/LICENSE
	[ ! -f debian/php-pear/usr/share/php/doc/PEAR/INSTALL ] || \
		$(RM) debian/php-pear/usr/share/php/doc/PEAR/INSTALL
	[ ! -f debian/php-pear/usr/share/php/doc/Structures_Graph/docs/generate.sh ] || \
		$(RM) debian/php-pear/usr/share/php/doc/Structures_Graph/docs/generate.sh
	for f in Structures_Graph/publish.sh Structures_Graph/package.sh \
		Structures_Graph/genpackage.xml.pl; do \
		$(RM) debian/php-pear/usr/share/php/data/$$f; \
	done
	# we don't want test suites
	$(RM) -r debian/php-pear/usr/share/php/test/
	[ -d debian/php-pear/usr/share/php/doc ] && { \
		mkdir -p debian/php-pear/usr/share/doc/php$(PHP_NAME_VERSION)-common/PEAR; \
		mv debian/php-pear/usr/share/php/doc/* \
			debian/php-pear/usr/share/doc/php$(PHP_NAME_VERSION)-common/PEAR/; \
		$(RM) -r debian/php-pear/usr/share/php/doc; \
		ln -s ../doc/php-pear/PEAR debian/php-pear/usr/share/php/doc; \
		echo "Dummy placeholder to prevent the directory's deletion" > \
			debian/php-pear/usr/share/doc/php$(PHP_NAME_VERSION)-common/PEAR/.placeholder; \
	}

	# install extensions
	ext=`./debian/libapache2-mod-php$(PHP_NAME_VERSION)/usr/bin/php-config$(PHP_NAME_VERSION) --extension-dir`;\
	for i in libapache2-mod-php$(PHP_NAME_VERSION) libapache2-mod-php$(PHP_NAME_VERSION)filter php$(PHP_NAME_VERSION)-cgi php$(PHP_NAME_VERSION)-cli libphp$(PHP_NAME_VERSION)-embed php$(PHP_NAME_VERSION)-fpm; do \
		mkdir -p debian/$$i/$${ext}; \
	done; \
	cat debian/modulelist debian/extramodulelist | while read package extname dsoname priority; do \
		if [ "$$package" = "mysqlnd" ]; then \
			modulepath=cgi-build/modules; \
		elif [ "$$package" = "readline" ]; then \
			modulepath=cli-build/modules; \
		else \
			modulepath=debian/libapache2-mod-php$(PHP_NAME_VERSION)/$${ext}; \
		fi; \
		if [ -z "$$dsoname" ]; then dsoname=$$package; fi; \
		mkdir -p debian/php$(PHP_NAME_VERSION)-$$package$${ext}; \
		install -m 644 -o root -g root \
			$${modulepath}/$$dsoname.so \
			debian/php$(PHP_NAME_VERSION)-$$package$${ext}/$$dsoname.so; \
		rm $${modulepath}/$$dsoname.so; \
	done

	# install CGI
	cp cgi-build/sapi/cgi/cgi-bin.php5 debian/php$(PHP_NAME_VERSION)-cgi/usr/lib/cgi-bin/php$(PHP_NAME_VERSION)
	cp cgi-build/sapi/cgi/usr.bin.php$(PHP_NAME_VERSION)-cgi debian/php$(PHP_NAME_VERSION)-cgi/usr/bin/php$(PHP_NAME_VERSION)-cgi
	cp cli-build/sapi/cli/php.1 debian/php$(PHP_NAME_VERSION)-cgi/usr/share/man/man1/php$(PHP_NAME_VERSION)-cgi.1

	# install CLI
	cp cli-build/sapi/cli/php debian/php$(PHP_NAME_VERSION)-cli/usr/bin/php$(PHP_NAME_VERSION)
	cp cli-build/sapi/cli/php.1 debian/php$(PHP_NAME_VERSION)-cli/usr/share/man/man1/php$(PHP_NAME_VERSION).1
	cp cli-build/ext/phar/phar.phar debian/php$(PHP_NAME_VERSION)-cli/usr/bin/phar
	cp cli-build/ext/phar/phar.1 debian/php$(PHP_NAME_VERSION)-cli/usr/share/man/man1/phar.1

	# install FPM
	mkdir -p debian/php$(PHP_NAME_VERSION)-fpm/usr/sbin debian/php$(PHP_NAME_VERSION)-fpm/usr/share/man/man8/ debian/php$(PHP_NAME_VERSION)-fpm/etc/php/$(PHP_NAME_VERSION)/fpm/pool.d
	cp fpm-build/sapi/fpm/php-fpm debian/php$(PHP_NAME_VERSION)-fpm/usr/sbin/php$(PHP_NAME_VERSION)-fpm
	cp fpm-build/sapi/fpm/php-fpm.8 debian/php$(PHP_NAME_VERSION)-fpm/usr/share/man/man8/php$(PHP_NAME_VERSION)-fpm.8
	# we don't want the pool definitions on the main file itself:
	sed -r '/('"'"'|\[)www('"'"'|\])/Q' < fpm-build/sapi/fpm/php-fpm.conf | \
	sed -e's{pid = /var/run/php5-fpm.pid{pid = /run/php$(PHP_NAME_VERSION)-fpm.pid{' \
	    > debian/php$(PHP_NAME_VERSION)-fpm/etc/php/$(PHP_NAME_VERSION)/fpm/php-fpm.conf
	# extract the first pool, called "www," from the config file:
	sed -nr '/('"'"'|\[)www('"'"'|\])/{h;p;d};x;/www/{x;p}' < fpm-build/sapi/fpm/php-fpm.conf | \
	sed -e's{^;listen\.owner{listen.owner{;' \
            -e's{^;listen\.group{listen.group{;' \
	    > debian/php$(PHP_NAME_VERSION)-fpm/etc/php/$(PHP_NAME_VERSION)/fpm/pool.d/www.conf
	# install a helper script for checking PHP FPM configuration
	install -m 755 debian/php$(PHP_NAME_VERSION)-fpm-checkconf debian/php$(PHP_NAME_VERSION)-fpm/usr/lib/php/$(PHP_NAME_VERSION)
	install -m 755 debian/php$(PHP_NAME_VERSION)-fpm-reopenlogs debian/php$(PHP_NAME_VERSION)-fpm/usr/lib/php/$(PHP_NAME_VERSION)

	# move and install -dev files
	dh_movefiles --sourcedir=debian/libphp$(PHP_NAME_VERSION)-embed
	dh_movefiles --sourcedir=debian/libapache2-mod-php$(PHP_NAME_VERSION)
	rm -rf debian/libphp$(PHP_NAME_VERSION)-embed/usr/include/ \
	       debian/libphp$(PHP_NAME_VERSION)-embed/usr/bin/
	rm -rf debian/libapache2-mod-php$(PHP_NAME_VERSION)/usr/lib/php/$(PHP_NAME_VERSION)/build/ \
	       debian/libapache2-mod-php$(PHP_NAME_VERSION)/usr/include/ \
	       debian/libapache2-mod-php$(PHP_NAME_VERSION)/usr/bin/
	rm -rf debian/libapache2-mod-php$(PHP_NAME_VERSION)filter/usr/lib/php/$(PHP_NAME_VERSION)/build/ \
	       debian/libapache2-mod-php$(PHP_NAME_VERSION)filter/usr/include/ \
	       debian/libapache2-mod-php$(PHP_NAME_VERSION)filter/usr/bin/
	for i in Makefile.global acinclude.m4 mkdep.awk phpize.m4 scan_makefile_in.awk; do \
		chmod 644 debian/php$(PHP_NAME_VERSION)-dev/usr/lib/php/$(PHP_NAME_VERSION)/build/$$i; \
	done
	mkdir -p debian/php$(PHP_NAME_VERSION)-dev/usr/share/php$(PHP_NAME_VERSION)
	cp -a ext/skeleton ext/ext_skel debian/php$(PHP_NAME_VERSION)-dev/usr/share/php$(PHP_NAME_VERSION)
	sed -i 's/skel_dir="skeleton"/skel_dir="\/usr\/share\/php$(PHP_NAME_VERSION)\/skeleton"/' \
	    debian/php$(PHP_NAME_VERSION)-dev/usr/share/php$(PHP_NAME_VERSION)/ext_skel
	# shipping duplicate files from other packages is hell for security audits
	ln -sf /usr/share/misc/config.guess $(PHPIZE_BUILDDIR)/config.guess
	ln -sf /usr/share/misc/config.sub $(PHPIZE_BUILDDIR)/config.sub
	ln -sf /usr/share/aclocal/libtool.m4 $(PHPIZE_BUILDDIR)/libtool.m4
	ln -sf $(LTMAIN_DIR)ltmain.sh $(PHPIZE_BUILDDIR)/ltmain.sh
	ln -sf /usr/bin/shtool $(PHPIZE_BUILDDIR)/shtool
	# make php-dev stuff versioned
	#for i in php-config phpize; do \
	#	mv debian/php$(PHP_NAME_VERSION)-dev/usr/bin/$$i debian/php$(PHP_NAME_VERSION)-dev/usr/bin/"$$i"5; \
	#	mv debian/php$(PHP_NAME_VERSION)-dev/usr/share/man/man1/"$$i".1 debian/php$(PHP_NAME_VERSION)-dev/usr/share/man/man1/"$$i"5.1; \
	#done
	# remove windows devel file
	rm $(CURDIR)/debian/php$(PHP_NAME_VERSION)-dev/usr/share/php$(PHP_NAME_VERSION)/skeleton/skeleton.dsp

	# install common files
	install -m755 debian/sessionclean debian/php$(PHP_NAME_VERSION)-common/usr/lib/php/$(PHP_NAME_VERSION)
	install -m755 debian/php5enmod debian/php$(PHP_NAME_VERSION)-common/usr/sbin/php$(PHP_NAME_VERSION)enmod
	#ln -s php5enmod debian/php$(PHP_NAME_VERSION)-common/usr/sbin/php$(PHP_NAME_VERSION)dismod
	install -m755 debian/php$(PHP_NAME_VERSION)query $(CURDIR)/debian/php$(PHP_NAME_VERSION)-common/usr/sbin/php$(PHP_NAME_VERSION)query

	# remove libtool files
	rm $(CURDIR)/debian/libphp$(PHP_NAME_VERSION)-embed/usr/lib/php/$(PHP_NAME_VERSION)/libphp5.la
	mv $(CURDIR)/debian/libphp$(PHP_NAME_VERSION)-embed/usr/lib/php/$(PHP_NAME_VERSION)/* $(CURDIR)/debian/libphp$(PHP_NAME_VERSION)-embed/usr/lib/

	# install lintian overrides
	#cp debian/php$(PHP_NAME_VERSION)-common.lintian-overrides $(CURDIR)/debian/php$(PHP_NAME_VERSION)-common/usr/share/lintian/overrides/php$(PHP_NAME_VERSION)-common
	#cp debian/php$(PHP_NAME_VERSION)-dev.lintian-overrides $(CURDIR)/debian/php$(PHP_NAME_VERSION)-dev/usr/share/lintian/overrides/php$(PHP_NAME_VERSION)-dev
	#cp debian/php-pear.lintian-overrides $(CURDIR)/debian/php-pear/usr/share/lintian/overrides/php-pear

	# install some generic lintian overrides
	ext=`debian/php$(PHP_NAME_VERSION)-dev/usr/bin/php-config$(PHP_NAME_VERSION) --extension-dir | cut -b2- `; \
	for sapi in php$(PHP_NAME_VERSION)-cli php$(PHP_NAME_VERSION)-fpm php$(PHP_NAME_VERSION)-cgi libapache2-mod-php$(PHP_NAME_VERSION) libapache2-mod-php$(PHP_NAME_VERSION)filter libphp$(PHP_NAME_VERSION)-embed; do \
		sed "s/@sapi@/$$sapi/g;s,@extdir@,$$ext,g" \
		    < $(CURDIR)/debian/php$(PHP_NAME_VERSION)-sapi.lintian-overrides | \
		grep -E "^$${sapi}: " \
		    >> $(CURDIR)/debian/"$$sapi".lintian-overrides; \
	done

	# directories cleanup:
	-rmdir -p debian/libapache2-mod-php$(PHP_NAME_VERSION)/usr/share/man/man1
	-find debian/php-pear -type d -exec rmdir --ignore-fail-on-non-empty -p '{}' \; >/dev/null 2>&1

	touch install-stamp

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
#binary-indep: DH_OPTIONS=-i
#binary-indep: build install
#	# Need this version of debhelper for DH_OPTIONS to work.
#	dh_testdir
#	dh_testroot
#
#	dh_installdocs
#
#	for package in php5 php-pear; do \
#		rm -rf debian/$$package/usr/share/doc/$$package; \
#		ln -s php$(PHP_NAME_VERSION)-common debian/$$package/usr/share/doc/$$package; \
#	done
#
#	dh_link
#	dh_compress -Xphp.ini
#	dh_fixperms
#	dh_installdeb
#	dh_gencontrol
#	dh_md5sums
#	dh_builddeb

override_dh_installdocs:
	dh_installdocs --link-doc=php$(PHP_NAME_VERSION)-common

override_dh_compress:
	dh_compress -Xphp.ini

# Build architecture-dependent files here.
binary-arch: build install
	# Need this version of debhelper for DH_OPTIONS to work.
	dh_testdir
	dh_testroot
	# Do this first so we don't overwrite any debhelper-generated files
	#
	# generate the config snippets for various php
	# modules from the templates.
	cat debian/modulelist debian/extramodulelist | while read package extname dsoname priority extension; do \
		if [ -z "$${dsoname}" ]; then dsoname=$$package; fi; \
		if [ -z "$${priority}" ]; then priority=20; fi; \
		if [ -z "$${extension}" ]; then extension=extension; fi; \
		mkdir -p debian/php$(PHP_NAME_VERSION)-$$package/usr/share/php$(PHP_NAME_VERSION)/$$package; \
		sed -e"s|@extname@|$${extname}|g; \
		       s/@dsoname@/$${dsoname}/g; \
		       s/@extension@/$${extension}/g; \
		       s/@priority@/$${priority}/g" \
		  < debian/php$(PHP_NAME_VERSION)-module.ini \
		  > debian/php$(PHP_NAME_VERSION)-$$package/usr/share/php$(PHP_NAME_VERSION)/$$package/$${dsoname}.ini; \
		echo -n "$$dsoname " >> debian/php$(PHP_NAME_VERSION)-$$package.modules; \
	done

	# generate the maintscripts for various php
	# modules from the templates.
	cat debian/modulelist | while read package extname dsoname priority; do \
	    modules=$$(cat debian/php$(PHP_NAME_VERSION)-$$package.modules); \
	    for script in postinst preinst postrm prerm; do \
	        sed -e"s/@package@/$${package}/g; \
	               s/@modules@/$${modules}/g; \
	                /#EXTRA#/ r debian/php$(PHP_NAME_VERSION)-$${package}.$${script}.extra" \
	          < debian/php$(PHP_NAME_VERSION)-module.$${script} \
	        | sed -e'/#EXTRA#/ d' \
	          > debian/php$(PHP_NAME_VERSION)-$${package}.$${script}; \
	    done; \
	    cp debian/php$(PHP_NAME_VERSION)-module.triggers debian/php$(PHP_NAME_VERSION)-$${package}.triggers; \
	    rm debian/php$(PHP_NAME_VERSION)-$$package.modules; \
	    mkdir -p debian/php$(PHP_NAME_VERSION)-$$package/usr/share/bug/php$(PHP_NAME_VERSION)-$$package; \
	    sed -e"s/@package@/$${package}/g; \
	           s/@modules@/$${modules}/g;" \
	      < debian/php$(PHP_NAME_VERSION)-module.bug.script \
	      > debian/php$(PHP_NAME_VERSION)-$$package/usr/share/bug/php$(PHP_NAME_VERSION)-$$package/script; \
	    chmod 755 debian/php$(PHP_NAME_VERSION)-$$package/usr/share/bug/php$(PHP_NAME_VERSION)-$$package/script; \
	    cp debian/php$(PHP_NAME_VERSION)-module.bug.control debian/php$(PHP_NAME_VERSION)-$$package/usr/share/bug/php$(PHP_NAME_VERSION)-$$package/control; \
	done

	# likewise, for the different sapi implementations
	for tmpl in postrm prerm postinst; do \
		for sapi in cgi cli fpm; do \
			sed -e "s/@sapi@/$${sapi}/g; \
	                        s/@package@/php$(PHP_NAME_VERSION)-$${sapi}/g; \
	                         /#EXTRA#/ r debian/php$(PHP_NAME_VERSION)-$${sapi}.$${tmpl}.extra" \
		  	< debian/php$(PHP_NAME_VERSION)-sapi.$${tmpl} \
	                | sed -e'/#EXTRA#/ d' \
		  	> debian/php$(PHP_NAME_VERSION)-$${sapi}.$${tmpl}; \
			mkdir -p "$(CURDIR)/debian/php$(PHP_NAME_VERSION)-$$sapi/usr/share/php$(PHP_NAME_VERSION)/sapi/"; \
			touch "$(CURDIR)/debian/php$(PHP_NAME_VERSION)-$$sapi/usr/share/php$(PHP_NAME_VERSION)/sapi/$$sapi"; \
			mkdir -p debian/php$(PHP_NAME_VERSION)-$$sapi/usr/share/bug/php$(PHP_NAME_VERSION)-$$sapi; \
			sed -e "s/@sapi@/$${sapi}/g; \
	                        s/@package@/php$(PHP_NAME_VERSION)-$${sapi}/g;" \
			  < debian/php$(PHP_NAME_VERSION)-sapi.bug.script \
			  > debian/php$(PHP_NAME_VERSION)-$$sapi/usr/share/bug/php$(PHP_NAME_VERSION)-$$sapi/script; \
			chmod 755 debian/php$(PHP_NAME_VERSION)-$$sapi/usr/share/bug/php$(PHP_NAME_VERSION)-$$sapi/script; \
			cp debian/php$(PHP_NAME_VERSION)-sapi.bug.control debian/php$(PHP_NAME_VERSION)-$$sapi/usr/share/bug/php$(PHP_NAME_VERSION)-$$sapi/control; \
		done; \
		for sapi in embed; do \
			sed -e "s/@sapi@/$${sapi}/g; \
	                        s/@package@/libphp$(PHP_NAME_VERSION)-$${sapi}/g; \
	                         /#EXTRA#/ r debian/libphp$(PHP_NAME_VERSION)-$${sapi}.$${tmpl}.extra" \
		  	< debian/php$(PHP_NAME_VERSION)-sapi.$${tmpl} \
	                | sed -e'/#EXTRA#/ d' \
		  	> debian/libphp$(PHP_NAME_VERSION)-$${sapi}.$${tmpl}; \
			mkdir -p "$(CURDIR)/debian/libphp$(PHP_NAME_VERSION)-$$sapi/usr/share/php$(PHP_NAME_VERSION)/sapi/"; \
			touch "$(CURDIR)/debian/libphp$(PHP_NAME_VERSION)-$$sapi/usr/share/php$(PHP_NAME_VERSION)/sapi/$$sapi"; \
			mkdir -p debian/libphp$(PHP_NAME_VERSION)-$$sapi/usr/share/bug/libphp$(PHP_NAME_VERSION)-$$sapi; \
			sed -e "s/@sapi@/$${sapi}/g; \
	                        s/@package@/libphp$(PHP_NAME_VERSION)-$${sapi}/g;" \
			  < debian/php$(PHP_NAME_VERSION)-sapi.bug.script \
			  > debian/libphp$(PHP_NAME_VERSION)-$$sapi/usr/share/bug/libphp$(PHP_NAME_VERSION)-$$sapi/script; \
			chmod 755 debian/libphp5-$$sapi/usr/share/bug/libphp$(PHP_NAME_VERSION)-$$sapi/script; \
			cp debian/php$(PHP_NAME_VERSION)-sapi.bug.control debian/libphp$(PHP_NAME_VERSION)-$$sapi/usr/share/bug/libphp$(PHP_NAME_VERSION)-$$sapi/control; \
		done; \
	        for sapi in "" "filter"; do \
		        sed -e "s/@sapi@/apache2$${sapi}/g; \
	                        s/@package@/libapache2-mod-php$(PHP_NAME_VERSION)$${sapi}/g; \
	                         /#EXTRA#/ r debian/libapache2-mod-php$(PHP_NAME_VERSION)$${sapi}.$${tmpl}.extra" \
		        < debian/php$(PHP_NAME_VERSION)-sapi.$${tmpl} \
	                | sed -e'/#EXTRA#/ d' \
		        > debian/libapache2-mod-php$(PHP_NAME_VERSION)$${sapi}.$${tmpl}; \
			mkdir -p "$(CURDIR)/debian/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/usr/share/php$(PHP_NAME_VERSION)/sapi/"; \
			touch "$(CURDIR)/debian/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/usr/share/php$(PHP_NAME_VERSION)/sapi/apache2$$sapi"; \
			mkdir -p debian/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/usr/share/bug/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi; \
		        sed -e "s/@sapi@/apache2$${sapi}/g; \
	                        s/@package@/libapache2-mod-php$(PHP_NAME_VERSION)$${sapi}/g;" \
			  < debian/php$(PHP_NAME_VERSION)-sapi.bug.script \
			  > debian/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/usr/share/bug/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/script; \
			chmod 755 debian/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/usr/share/bug/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/script; \
			cp debian/php$(PHP_NAME_VERSION)-sapi.bug.control debian/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/usr/share/bug/libapache2-mod-php$(PHP_NAME_VERSION)$$sapi/control; \
	        done; \
	done

	#dh_installdocs -s

	#cat debian/modulelist | grep -v common | while read package extname dsoname priority; do \
	#	rm -rf debian/php5-$$package/usr/share/doc/php5-$$package; \
	#	ln -s php$(PHP_NAME_VERSION)-common debian/php5-$$package/usr/share/doc/php5-$$package; \
	#done

	dh_installdocs -s --link-doc=php$(PHP_NAME_VERSION)-common
	dh_perl
	dh_installlogrotate -pphp$(PHP_NAME_VERSION)-fpm
	dh_installcron -pphp$(PHP_NAME_VERSION)-common --name=php$(PHP_NAME_VERSION)
	dh_installchangelogs -pphp$(PHP_NAME_VERSION)-common NEWS
	dh_systemd_enable
	dh_installinit
	dh_systemd_start
	dh_link -s
	dh_compress -s -Xphp.ini
	dh_fixperms -s -X/var/lib/php$(PHP_NAME_VERSION)
	dh_strip -s --dbg-package=php$(PHP_NAME_VERSION)-dbg
	dh_makeshlibs -s -plibphp$(PHP_NAME_VERSION)-embed -V 'libphp$(PHP_NAME_VERSION)-embed (>= 5.5.0)'
	dh_shlibdeps -s
	dh_installdeb -s

	phpapi=`./debian/php$(PHP_NAME_VERSION)-dev/usr/bin/php-config$(PHP_NAME_VERSION) --phpapi`; \
	stored=`cat debian/phpapi`; \
	if [ "$${phpapi}" != "$${stored}" ]; then echo "PHPAPI has changed, please modify debian/phpapi"; exit 1; fi; \
	for i in php$(PHP_NAME_VERSION)-common; do \
		echo "php:Provides=phpapi-$${phpapi}" >> debian/$$i.substvars; \
	done; \
	cat debian/modulelist | while read package extname dsoname priority; do \
		echo "php:Depends=phpapi-$${phpapi}" >> debian/php$(PHP_NAME_VERSION)-$$package.substvars; \
	done

	for i in cgi cli fpm; do \
		"$$i"-build/sapi/cli/php -n -r '$(BUILTIN_EXTENSION_CHECK)' \
			>> debian/php$(PHP_NAME_VERSION)-"$$i".substvars; \
	done
	for i in embed; do \
		"$$i"-build/sapi/cli/php -n -r '$(BUILTIN_EXTENSION_CHECK)' \
			>> debian/libphp$(PHP_NAME_VERSION)-"$$i".substvars; \
	done
	for i in apache2; do \
		"$$i"-build/sapi/cli/php -n -r '$(BUILTIN_EXTENSION_CHECK)' \
			>> debian/lib"$$i"-mod-php$(PHP_NAME_VERSION).substvars; \
		"$$i"filter-build/sapi/cli/php -n -r '$(BUILTIN_EXTENSION_CHECK)' \
			>> debian/lib"$$i"-mod-php$(PHP_NAME_VERSION)filter.substvars; \
	done

	echo "libtool:Conflicts=$(LIBTOOL_CONFLICTS)" >>debian/php$(PHP_NAME_VERSION)-dev.substvars
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

#binary: binary-arch binary-indep
#build-arch: build
#build-indep: build

#.PHONY: build build-arch build-indep clean binary-indep binary-arch binary install configure
